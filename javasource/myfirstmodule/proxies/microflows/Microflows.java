// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the MyFirstModule module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder createNewUserAccountBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.CreateNewUserAccount");
		return builder;
	}

	public static void createNewUserAccount(IContext context)
	{
		createNewUserAccountBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder saveNewUserAccountBuilder(
		administration.proxies.AccountPasswordData _accountPasswordData
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.SaveNewUserAccount");
		builder = builder.withParam("AccountPasswordData", _accountPasswordData);
		return builder;
	}

	public static void saveNewUserAccount(
		IContext context,
		administration.proxies.AccountPasswordData _accountPasswordData
	)
	{
		saveNewUserAccountBuilder(
				_accountPasswordData
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder showNewPasswordFormBuilder(
		myfirstmodule.proxies.EmcureUser _emcureUser
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.ShowNewPasswordForm");
		builder = builder.withParam("EmcureUser", _emcureUser);
		return builder;
	}

	public static void showNewPasswordForm(
		IContext context,
		myfirstmodule.proxies.EmcureUser _emcureUser
	)
	{
		showNewPasswordFormBuilder(
				_emcureUser
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_DesignationBuilder(
		myfirstmodule.proxies.Designation _designation
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.VAL_Designation");
		builder = builder.withParam("Designation", _designation);
		return builder;
	}

	public static boolean vAL_Designation(
		IContext context,
		myfirstmodule.proxies.Designation _designation
	)
	{
		Object result = vAL_DesignationBuilder(
				_designation
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_EntityBuilder(
		myfirstmodule.proxies.Organisation _organization
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.VAL_Entity");
		builder = builder.withParam("Organization", _organization);
		return builder;
	}

	public static boolean vAL_Entity(
		IContext context,
		myfirstmodule.proxies.Organisation _organization
	)
	{
		Object result = vAL_EntityBuilder(
				_organization
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_FunctionBuilder(
		myfirstmodule.proxies.Function _function
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.VAL_Function");
		builder = builder.withParam("Function", _function);
		return builder;
	}

	public static boolean vAL_Function(
		IContext context,
		myfirstmodule.proxies.Function _function
	)
	{
		Object result = vAL_FunctionBuilder(
				_function
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_UnitBuilder(
		myfirstmodule.proxies.Unit _unit
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.VAL_Unit");
		builder = builder.withParam("Unit", _unit);
		return builder;
	}

	public static boolean vAL_Unit(
		IContext context,
		myfirstmodule.proxies.Unit _unit
	)
	{
		Object result = vAL_UnitBuilder(
				_unit
			)
			.execute(context);
		return (boolean) result;
	}
}
